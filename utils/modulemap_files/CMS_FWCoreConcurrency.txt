module CMS_FWCoreConcurrency {
  module "FunctorTask.h" { header "FWCore/Concurrency/interface/FunctorTask.h" export * }
  module "LimitedTaskQueue.h" { header "FWCore/Concurrency/interface/LimitedTaskQueue.h" export * }
  module "SerialTaskQueue.h" { header "FWCore/Concurrency/interface/SerialTaskQueue.h" export * }
  module "SerialTaskQueueChain.h" { header "FWCore/Concurrency/interface/SerialTaskQueueChain.h" export * }
  module "SharedResourceNames.h" { header "FWCore/Concurrency/interface/SharedResourceNames.h" export * }
  module "ThreadSafeAddOnlyContainer.h" { header "FWCore/Concurrency/interface/ThreadSafeAddOnlyContainer.h" export * }
  module "ThreadSafeOutputFileStream.h" { header "FWCore/Concurrency/interface/ThreadSafeOutputFileStream.h" export * }
  module "WaitingTask.h" { header "FWCore/Concurrency/interface/WaitingTask.h" export * }
  module "WaitingTaskHolder.h" { header "FWCore/Concurrency/interface/WaitingTaskHolder.h" export * }
  module "WaitingTaskList.h" { header "FWCore/Concurrency/interface/WaitingTaskList.h" export * }
  module "WaitingTaskWithArenaHolder.h" { header "FWCore/Concurrency/interface/WaitingTaskWithArenaHolder.h" export * }
  module "Xerces.h" { header "FWCore/Concurrency/interface/Xerces.h" export * }
  module "hardware_pause.h" { header "FWCore/Concurrency/interface/hardware_pause.h" export * }
  export *
}

